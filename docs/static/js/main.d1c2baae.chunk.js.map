{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","oldCat","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,uBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAM,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAMhB,UACE,+CACA,uBACEO,KAAK,OACLC,MAAQT,EACRU,SApBe,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,QAoBnBG,YAAY,yB,+BC5BPC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAWH,GAF5C,+DAGHI,MAAMF,GAHH,cAGfG,EAHe,gBAIAA,EAAIC,OAJJ,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVlB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAElC,OACE,sBAAKc,UAAU,gDAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEvB,ECH0B,SAACA,GAE3B,MAA0Bf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAZAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAM,SAAAC,GACLC,YAAW,WACTJ,EAAS,CACPf,KAAKkB,EACLL,SAAS,MAEX,WAEN,CAACpB,IAEIqB,EDjB0BM,CAAa3B,GAAhCa,EAAd,EAAON,KAAea,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEWRiB,EAxBM,WAEnB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEI6C,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CACEA,SAAUA,GACLA,Y,MCbnB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d1c2baae.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n  \n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if(inputValue.trim().length > 2){\n      setCategories(oldCat => [inputValue, ...oldCat]);\n      setInputValue('');\n    }\n\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add Category </h2>  \n      <input\n        type=\"text\"\n        value= {inputValue}\n        onChange={ handleChange}\n        placeholder=\"Ingrese un texto\"\n      /> \n    </form>\n  )\n}\n\n\nAddCategory.propTypes = {\n\n  setCategories : PropTypes.func.isRequired\n\n}","export const getGifs = async (category) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category)}&limit=10&api_key=ofuX9dpqv1MjT16LAPyv2CGGuMNxVmV9`;\n  const res = await fetch(url);\n  const {data} = await res.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title : img.title, \n      url : img.images?.downsized_medium.url\n    }\n  })\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n  return (\n    <div className=\"card animate__animated animate__fadeInLeftBig\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({category}) => {\n\n  const {data : images, loading} = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      { loading && <p className=\"animate__animated animate__flash\">loading</p> }\n      <div className=\"card-grid\">\n        {\n          images.map( img => (\n            <GifGridItem\n              key={img.id}\n              {...img}\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  \n  useEffect(() => {\n    getGifs(category)\n      .then( imgs => {\n        setTimeout(() => {\n          setState({\n            data:imgs,\n            loading: false\n          });\n        },1500)\n      })\n  },[category]) \n\n  return state;\n}\n","import React,{useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['One Punch'])   \n\n  return (\n    <>\n      <h2>GifExpertApp2</h2>\n      <AddCategory setCategories={setCategories}/>\n      <hr/>\n      <ol>\n        {\n          categories.map( category => (\n            <GifGrid \n              category={category}\n              key={category}\n            />\n          ))\n        }\n      </ol>\n    </>\n  );\n\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}